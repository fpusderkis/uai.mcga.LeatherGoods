//====================================================================================================
// Base code generated with LeatherGoods - ASF.Data
// Architecture Solutions Foundation
//
// Generated by academic at LeatherGoods V 1.0 
//====================================================================================================

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Data.Common;
using System.Data;
using System.Data.Entity;
using Microsoft.Practices.EnterpriseLibrary.Data;
using ASF.Entities;

namespace ASF.Data
{
    /// <summary>
    /// 
    /// </summary>
    public class CategoryDAC : AbstractDAC<Category>
    {
        /// <summary>
        /// 
        /// </summary>
        /// <param name="category"></param>
        /// <returns></returns>
        public Category Create(Category category)
        {
            using (var dbc = Context) {

                var savedCategory = dbc.Category.Add(category);
                dbc.SaveChanges();
                return savedCategory;

            }
            
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="category"></param>
        public void UpdateById(Category category)
        {
            using (var dbc = Context)
            {
                category.ChangedOn = new DateTime();
                dbc.Entry(category).State = System.Data.Entity.EntityState.Modified;
                dbc.SaveChanges();
            }
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id"></param>
        public void DeleteById(int id)
        {
            using (var dbc = Context)
            {
                Category category = new Category { Id = id };
                dbc.Category.Attach(category);
                dbc.Category.Remove(category);
            }
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public Category SelectById(int id)
        {
            using (var dbc = new LeatherContext())
            {
                return dbc.Category.Find(id);
            }
        }

        /// <summary>
        /// 
        /// </summary>
        /// <returns></returns>		
        public List<Category> Select()
        {

            return SelectAll();
/*
            using (var dbc = new LeatherContext())
            {
                dbc.Database.Log = s => System.Diagnostics.Debug.WriteLine(s);


                return dbc.Category.ToList<Category>();
            }
            */
            
        }

        public CategoryDAC() : base(new LeatherContext()) 
        {
        }
        
        public CategoryDAC(LeatherContext context) : base(context)
        {
        }
    }
}

